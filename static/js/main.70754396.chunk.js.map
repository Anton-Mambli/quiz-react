{"version":3,"sources":["components/Navigation/Drawer/Drawer.module.css","components/Navigation/MenuToggle/MenuToggle.module.css","containers/Quiz/Quiz.module.css","components/ActiveQuiz/ActiveQuiz.module.css","components/ActiveQuiz/AnswersList/AnswerItem/AnswerItem.module.css","components/FinishedQuiz/FinishedQuiz.module.css","components/UI/Button/Button.module.css","components/UI/Loader/Loader.module.css","containers/Auth/Auth.module.css","components/UI/Input/Input.module.css","hoc/Layout/Layout.module.css","components/UI/Backdrop/Backdrop.module.css","components/ActiveQuiz/AnswersList/AnswersList.module.css","containers/QuizCreator/QuizCreator.module.css","components/UI/Select/Select.module.css","containers/QuizList/QuizList.module.css","components/Navigation/MenuToggle/MenuToggle.js","components/UI/Backdrop/Backdrop.js","components/Navigation/Drawer/Drawer.js","hoc/Layout/Layout.js","components/ActiveQuiz/AnswersList/AnswerItem/AnswerItem.js","components/ActiveQuiz/AnswersList/AnswersList.js","components/ActiveQuiz/ActiveQuiz.js","components/UI/Button/Button.js","components/FinishedQuiz/FinishedQuiz.js","components/UI/Loader/Loader.js","Axios/axios-quiz.js","store/actions/quiz.js","store/actions/actionTypes.js","containers/Quiz/Quiz.js","components/UI/Input/Input.js","containers/Auth/Auth.js","components/UI/Select/Select.js","form/formFramework.js","containers/QuizCreator/QuizCreator.js","store/actions/create.js","containers/QuizList/QuizList.js","App.js","serviceWorker.js","store/reducers/quiz.js","store/reducers/create.js","store/reducers/rootReducer.js","index.js"],"names":["module","exports","MenuToggle","props","cls","classes","isOpen","push","open","className","join","onClick","onToggle","Backdrop","links","to","label","exact","Drawer","clickHandler","onClose","map","link","index","key","activeClassName","active","this","close","Fragment","renderLinks","Component","Layout","state","menu","toggleMenuHandler","setState","closeMenuHandler","children","AnswerItem","onAnswerClick","answer","id","text","AnswersList","Answerslist","answers","ActiveQuiz","Question","answerNumber","question","quizLength","Button","type","disabled","FinishedQuiz","successCount","Object","keys","results","reduce","total","quiz","quizItem","length","onRetry","Loader","center","axios","create","baseURL","fetchQuizSuccess","fetchQuizesSuccess","quizes","fetchQuizesError","e","error","quizSetState","answerState","Quiz","fetchQuizById","match","params","retryQuiz","QuizWrapper","loading","isFinished","activeQuestion","quizAnswerClick","connect","dispatch","quizId","a","get","response","data","answerId","getState","rightAnswerId","timeout","window","setTimeout","isQuizFinished","number","clearTimeout","isInvalid","valid","touched","shouldValidate","Input","inputType","htmlFor","Math","random","invalid","value","onChange","errorMessage","Auth","isFormValid","formControls","email","validation","required","password","minLength","loginHandler","authData","returnSecureToken","post","console","log","registerHandler","onChangeHandler","event","controlName","control","target","validateControl","forEach","name","submitHandler","preventDefault","isValid","trim","is","action","onSubmit","AuthForm","renderInputs","Select","options","option","createControl","config","validate","validateForm","hasOwnProperty","createOptionControl","createFormControls","option1","option2","option3","option4","QuizCreator","addQuestionHandler","questionItem","createQuizQuestion","createQuizHandler","finishCreateQuiz","changeHandler","selectChangeHandler","select","renderControls","item","QuizList","fetchQuizes","renderQuizes","App","path","component","Boolean","location","hostname","initialState","combineReducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","thunk","app","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.70754396.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Drawer\":\"Drawer_Drawer__1PEZB\",\"close\":\"Drawer_close__273rS\",\"active\":\"Drawer_active__2ZEf5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MenuToggle\":\"MenuToggle_MenuToggle__odqdx\",\"open\":\"MenuToggle_open__2_JgM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Quiz\":\"Quiz_Quiz__wO50w\",\"QuizWrapper\":\"Quiz_QuizWrapper__2LnzD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ActiveQuiz\":\"ActiveQuiz_ActiveQuiz__1S2zk\",\"Question\":\"ActiveQuiz_Question__12btG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AnswerItem\":\"AnswerItem_AnswerItem__jAxnK\",\"success\":\"AnswerItem_success__2e6-O\",\"error\":\"AnswerItem_error__2CJW8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FinishedQuiz\":\"FinishedQuiz_FinishedQuiz__3xNoJ\",\"success\":\"FinishedQuiz_success__V0g78\",\"error\":\"FinishedQuiz_error__3vtHn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__2_lUj\",\"success\":\"Button_success__PucD9\",\"error\":\"Button_error__26tWo\",\"primary\":\"Button_primary__AHf3r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"center\":\"Loader_center__2t7XY\",\"Loader\":\"Loader_Loader___80HG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth_Auth__3_gaw\",\"AuthForm\":\"Auth_AuthForm__2N9Sx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__7Kv-z\",\"invalid\":\"Input_invalid__2S52v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout_Layout__7i3oO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__2w6UC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Answerslist\":\"AnswersList_Answerslist__1UjgT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"QuizCreator\":\"QuizCreator_QuizCreator__fbc3B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Select\":\"Select_Select__2yfoR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"QuizList\":\"QuizList_QuizList__3mKtB\"};","import React from \"react\";\r\nimport classes from \"./MenuToggle.module.css\";\r\n\r\nconst MenuToggle = props => {\r\n  const cls = [classes.MenuToggle, \"fa\"];\r\n  if (props.isOpen) {\r\n    cls.push(\"fa-times\");\r\n    cls.push(classes.open);\r\n  } else {\r\n    cls.push(\"fa-bars\");\r\n  }\r\n  return <i className={cls.join(\" \")} onClick={props.onToggle} />;\r\n};\r\nexport default MenuToggle;\r\n","import React, { Component } from \"react\";\r\nimport classes from \"./Backdrop.module.css\";\r\n\r\nconst Backdrop = props => (\r\n  <div className={classes.Backdrop} onClick={props.onClick}></div>\r\n);\r\nexport default Backdrop;\r\n","import React, { Component } from \"react\";\r\nimport classes from \"./Drawer.module.css\";\r\nimport Backdrop from \"../../UI/Backdrop/Backdrop\";\r\nimport { NavLink } from \"react-router-dom\";\r\nconst links = [\r\n  { to: \"/\", label: \"Список\", exact: true },\r\n  { to: \"/auth\", label: \"Авторизация\", exact: false },\r\n  { to: \"/quiz-creator\", label: \"Создать тест\", exact: false }\r\n];\r\n\r\nclass Drawer extends Component {\r\n  clickHandler = () => this.props.onClose;\r\n  renderLinks() {\r\n    return links.map((link, index) => {\r\n      return (\r\n        <li key={index}>\r\n          <NavLink\r\n            to={link.to}\r\n            exact={link.exact}\r\n            activeClassName={classes.active}\r\n            onClick={this.clickHandler}\r\n          >\r\n            {link.label}\r\n          </NavLink>\r\n        </li>\r\n      );\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const cls = [classes.Drawer];\r\n    if (!this.props.isOpen) {\r\n      cls.push(classes.close);\r\n    }\r\n    return (\r\n      <React.Fragment>\r\n        <nav className={cls.join(\" \")}>\r\n          <ul> {this.renderLinks()}</ul>{\" \"}\r\n        </nav>\r\n        {this.props.isOpen ? <Backdrop onClick={this.props.onClose} /> : null}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Drawer;\r\n","import React, { Component } from \"react\";\r\nimport classes from \"./Layout.module.css\";\r\nimport MenuToggle from \"../../components/Navigation/MenuToggle/MenuToggle\";\r\nimport Drawer from \"../../components/Navigation/Drawer/Drawer\";\r\nclass Layout extends Component {\r\n  state = {\r\n    menu: false\r\n  };\r\n\r\n  toggleMenuHandler = () => {\r\n    this.setState({\r\n      menu: !this.state.menu\r\n    });\r\n  };\r\n  closeMenuHandler = () => {\r\n    this.setState({\r\n      menu: false\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <div className={classes.Layout}>\r\n        <Drawer isOpen={this.state.menu} onClose={this.closeMenuHandler} />\r\n        <MenuToggle\r\n          onToggle={this.toggleMenuHandler}\r\n          isOpen={this.state.menu}\r\n        />\r\n        <main>{this.props.children}</main>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Layout;\r\n","import React, { Component } from \"react\";\r\nimport classes from \"./AnswerItem.module.css\";\r\n\r\nconst AnswerItem = props => {\r\n  const cls = [classes.AnswerItem];\r\n  if (props.state) {\r\n    cls.push(classes[props.state]);\r\n  }\r\n  return (\r\n    <li\r\n      className={cls.join(\" \")}\r\n      onClick={() => props.onAnswerClick(props.answer.id)}\r\n    >\r\n      {props.answer.text}\r\n    </li>\r\n  );\r\n};\r\nexport default AnswerItem;\r\n","import React, { Component } from \"react\";\r\nimport classes from \"./AnswersList.module.css\";\r\nimport AnswerItem from \"./AnswerItem/AnswerItem\";\r\nconst AnswersList = props => (\r\n  <ul className={classes.Answerslist}>\r\n    {props.answers.map((answer, index) => {\r\n      return (\r\n        <AnswerItem\r\n          answer={answer}\r\n          key={index}\r\n          onAnswerClick={props.onAnswerClick}\r\n          state={props.state ? props.state[answer.id] : null}\r\n        />\r\n      );\r\n    })}\r\n  </ul>\r\n);\r\nexport default AnswersList;\r\n","import React from \"react\";\r\nimport classes from \"./ActiveQuiz.module.css\";\r\nimport AnswersList from \"./AnswersList/AnswersList\";\r\nconst ActiveQuiz = props => (\r\n  <div className={classes.ActiveQuiz}>\r\n    <p className={classes.Question}>\r\n      <span>\r\n        <strong>{props.answerNumber}. </strong>\r\n        {props.question}\r\n      </span>\r\n      <small>\r\n        {props.answerNumber} из {props.quizLength}\r\n      </small>\r\n    </p>\r\n    <AnswersList\r\n      answers={props.answers}\r\n      onAnswerClick={props.onAnswerClick}\r\n      state={props.state}\r\n    />\r\n  </div>\r\n);\r\nexport default ActiveQuiz;\r\n","import React from \"react\";\r\nimport classes from \"./Button.module.css\";\r\n\r\nconst Button = props => {\r\n  const cls = [classes.Button, classes[props.type]];\r\n\r\n  return (\r\n    <button\r\n      onClick={props.onClick}\r\n      className={cls.join(\" \")}\r\n      disabled={props.disabled}\r\n    >\r\n      {props.children}\r\n    </button>\r\n  );\r\n};\r\nexport default Button;\r\n","import React from \"react\";\r\nimport classes from \"./FinishedQuiz.module.css\";\r\nimport Button from \"../UI/Button/Button\";\r\nimport { Link } from \"react-router-dom\";\r\nconst FinishedQuiz = props => {\r\n  const successCount = Object.keys(props.results).reduce((total, key) => {\r\n    if (props.results[key] === \"success\") {\r\n      total++;\r\n    }\r\n    return total;\r\n  }, 0);\r\n  return (\r\n    <div className={classes.FinishedQuiz}>\r\n      <ul>\r\n        {props.quiz.map((quizItem, index) => {\r\n          const cls = [\r\n            \"fa\",\r\n            props.results[quizItem.id] === \"error\" ? \"fa-times\" : \"fa-check\",\r\n            classes[props.results[quizItem.id]]\r\n          ];\r\n          return (\r\n            <li key={index}>\r\n              <strong>{index + 1}. </strong>\r\n              {quizItem.question}\r\n              <i className={cls.join(\" \")} />\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n      <p>\r\n        Правильных ответов {successCount} из {props.quiz.length}\r\n      </p>\r\n      <div>\r\n        <Button onClick={props.onRetry} type=\"primary\">\r\n          Повторить\r\n        </Button>\r\n        <Link to=\"/\">\r\n          <Button type=\"success\">Перейти в список тестов</Button>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default FinishedQuiz;\r\n","import React from \"react\";\r\nimport classes from \"./Loader.module.css\";\r\nexport default function Loader(props) {\r\n  return (\r\n    <div className={classes.center}>\r\n      <div className={classes.Loader}>\r\n        <div />\r\n        <div />\r\n        <div />\r\n        <div />\r\n        <div />\r\n        <div />\r\n        <div />\r\n        <div />\r\n        <div />\r\n        <div />\r\n        <div />\r\n        <div />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import axios from \"axios\";\r\nexport default axios.create({\r\n  baseURL: \"https://react-quiz-38eb1.firebaseio.com/\"\r\n});\r\n","import axios from \"../../Axios/axios-quiz\";\r\nimport {\r\n  FETCH_QUIZ_SUCCESS,\r\n  FETCH_QUIZES_ERROR,\r\n  FETCH_QUIZES_START,\r\n  FETCH_QUIZES_SUCCESS,\r\n  QUIZ_SET_STATE,\r\n  FINISH_QUIZ,\r\n  QUIZ_NEXT_QUESTION,\r\n  QUIZ_RETRY\r\n} from \"./actionTypes\";\r\n\r\nexport function fetchQuizes() {\r\n  return async dispatch => {\r\n    dispatch(fetchQuizesStart());\r\n    try {\r\n      const response = await axios.get(\"/quizes.json\");\r\n\r\n      const quizes = [];\r\n\r\n      Object.keys(response.data).forEach((key, index) => {\r\n        quizes.push({\r\n          id: key,\r\n          name: `Тест №${index + 1}`\r\n        });\r\n      });\r\n\r\n      dispatch(fetchQuizesSuccess(quizes));\r\n    } catch (e) {\r\n      dispatch(fetchQuizesError(e));\r\n    }\r\n  };\r\n}\r\n\r\nexport function fetchQuizById(quizId) {\r\n  return async dispatch => {\r\n    dispatch(fetchQuizesStart());\r\n\r\n    try {\r\n      const response = await axios.get(`/quizes/${quizId}.json`);\r\n      const quiz = response.data;\r\n\r\n      dispatch(fetchQuizSuccess(quiz));\r\n    } catch (e) {\r\n      dispatch(fetchQuizesError(e));\r\n    }\r\n  };\r\n}\r\n\r\nexport function fetchQuizSuccess(quiz) {\r\n  return {\r\n    type: FETCH_QUIZ_SUCCESS,\r\n    quiz\r\n  };\r\n}\r\n\r\nexport function fetchQuizesStart() {\r\n  return {\r\n    type: FETCH_QUIZES_START\r\n  };\r\n}\r\n\r\nexport function fetchQuizesSuccess(quizes) {\r\n  return {\r\n    type: FETCH_QUIZES_SUCCESS,\r\n    quizes\r\n  };\r\n}\r\n\r\nexport function fetchQuizesError(e) {\r\n  return {\r\n    type: FETCH_QUIZES_ERROR,\r\n    error: e\r\n  };\r\n}\r\nexport function quizNextQuestion(number) {\r\n  return {\r\n    type: QUIZ_NEXT_QUESTION,\r\n    number\r\n  };\r\n}\r\nexport function finishQuiz() {\r\n  return {\r\n    type: FINISH_QUIZ\r\n  };\r\n}\r\nexport function quizSetState(answerState, results) {\r\n  return {\r\n    type: QUIZ_SET_STATE,\r\n    answerState,\r\n    results\r\n  };\r\n}\r\nexport function retryQuiz() {\r\n  return {\r\n    type: QUIZ_RETRY\r\n  };\r\n}\r\nexport function quizAnswerClick(answerId) {\r\n  return (dispatch, getState) => {\r\n    const state = getState().quiz;\r\n\r\n    if (state.answerState) {\r\n      const key = Object.keys(state.answerState)[0];\r\n      if (state.answerState[key] === \"success\") {\r\n        return;\r\n      }\r\n    }\r\n\r\n    const question = state.quiz[state.activeQuestion];\r\n    const results = state.results;\r\n\r\n    if (question.rightAnswerId === answerId) {\r\n      if (!results[question.id]) {\r\n        results[question.id] = \"success\";\r\n      }\r\n      dispatch(quizSetState({ [answerId]: \"success\" }, results));\r\n\r\n      const timeout = window.setTimeout(() => {\r\n        if (isQuizFinished(state)) {\r\n          dispatch(finishQuiz());\r\n        } else {\r\n          dispatch(quizNextQuestion(state.activeQuestion + 1));\r\n        }\r\n        window.clearTimeout(timeout);\r\n      }, 1000);\r\n    } else {\r\n      results[question.id] = \"error\";\r\n      dispatch(quizSetState({ [answerId]: \"error\" }, results));\r\n    }\r\n  };\r\n}\r\nfunction isQuizFinished(state) {\r\n  return state.activeQuestion + 1 === state.quiz.length;\r\n}\r\n","export const FETCH_QUIZES_START = \"FETCH_QUIZES_START\";\r\nexport const FETCH_QUIZES_SUCCESS = \"FETCH_QUIZES_SUCCESS\";\r\nexport const FETCH_QUIZES_ERROR = \"FETCH_QUIZES_ERROR\";\r\n\r\nexport const FETCH_QUIZ_SUCCESS = \"FETCH_QUIZ_SUCCESS\";\r\nexport const QUIZ_SET_STATE = \"QUIZ_SET_STATE\";\r\nexport const FINISH_QUIZ = \"FINISH_QUIZ\";\r\nexport const QUIZ_NEXT_QUESTION = \"QUIZ_NEXT_QUESTION\";\r\nexport const QUIZ_RETRY = \"QUIZ_RETRY\";\r\nexport const CREATE_QUIZ_QUESTION = \"CREATE_QUIZ_QUESTION\";\r\nexport const RESET_QUIZ_CREATION = \"RESET_QUIZ_CREATION\";\r\n","import React, { Component } from \"react\";\r\nimport classes from \"./Quiz.module.css\";\r\nimport ActiveQuiz from \"../../components/ActiveQuiz/ActiveQuiz\";\r\nimport FinishedQuiz from \"../../components/FinishedQuiz/FinishedQuiz\";\r\n\r\nimport Loader from \"../../components/UI/Loader/Loader\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  fetchQuizById,\r\n  quizAnswerClick,\r\n  retryQuiz\r\n} from \"../../store/actions/quiz\";\r\n\r\nclass Quiz extends Component {\r\n  componentDidMount() {\r\n    this.props.fetchQuizById(this.props.match.params.id);\r\n  }\r\n  componentWillUnmount() {\r\n    this.props.retryQuiz();\r\n  }\r\n  render() {\r\n    return (\r\n      <div className={classes.Quiz}>\r\n        <div className={classes.QuizWrapper}>\r\n          <h1>Ответьте на все вопросы</h1>\r\n\r\n          {this.props.loading || !this.props.quiz ? (\r\n            <Loader />\r\n          ) : this.props.isFinished ? (\r\n            <FinishedQuiz\r\n              results={this.props.results}\r\n              quiz={this.props.quiz}\r\n              onRetry={this.props.retryQuiz}\r\n            />\r\n          ) : (\r\n            <ActiveQuiz\r\n              answers={this.props.quiz[this.props.activeQuestion].answers}\r\n              question={this.props.quiz[this.props.activeQuestion].question}\r\n              onAnswerClick={this.props.quizAnswerClick}\r\n              quizLength={this.props.quiz.length}\r\n              answerNumber={this.props.activeQuestion + 1}\r\n              state={this.props.answerState}\r\n            />\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    results: state.quiz.results,\r\n    isFinished: state.quiz.isFinished,\r\n    activeQuestion: state.quiz.activeQuestion,\r\n    answerState: state.quiz.answerState,\r\n    quiz: state.quiz.quiz,\r\n    loading: state.quiz.loading\r\n  };\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    fetchQuizById: id => dispatch(fetchQuizById(id)),\r\n    quizAnswerClick: answerId => dispatch(quizAnswerClick(answerId)),\r\n    retryQuiz: () => dispatch(retryQuiz())\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Quiz);\r\n","import React from \"react\";\r\nimport classes from \"./Input.module.css\";\r\n\r\nfunction isInvalid({ valid, touched, shouldValidate }) {\r\n  return !valid && shouldValidate && touched;\r\n}\r\n\r\nconst Input = props => {\r\n  const inputType = props.type || \"text\";\r\n  const cls = [classes.Input];\r\n  const htmlFor = `${inputType}-${Math.random()}`;\r\n\r\n  if (isInvalid(props)) {\r\n    cls.push(classes.invalid);\r\n  }\r\n\r\n  return (\r\n    <div className={cls.join(\" \")}>\r\n      <label htmlFor={htmlFor}>{props.label}</label>\r\n      <input\r\n        type={inputType}\r\n        id={htmlFor}\r\n        value={props.value}\r\n        onChange={props.onChange}\r\n      />\r\n\r\n      {isInvalid(props) ? (\r\n        <span>{props.errorMessage || \"Введите верное значение\"}</span>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import React, { Component } from \"react\";\r\nimport classes from \"./Auth.module.css\";\r\nimport Button from \"../../components/UI/Button/Button\";\r\nimport Input from \"../../components/UI/Input/Input\";\r\nimport is from \"is_js\";\r\nimport axios from \"axios\";\r\n\r\nexport default class Auth extends Component {\r\n  state = {\r\n    isFormValid: false,\r\n    formControls: {\r\n      email: {\r\n        value: \"\",\r\n        type: \"email\",\r\n        label: \"Email\",\r\n        errorMessage: \"Введите корректный e-mail\",\r\n        valid: false,\r\n        touched: false,\r\n        validation: {\r\n          required: true,\r\n          email: true\r\n        }\r\n      },\r\n      password: {\r\n        value: \"\",\r\n        type: \"password\",\r\n        label: \"Пароль\",\r\n        errorMessage: \"Введите корректный пароль\",\r\n        valid: false,\r\n        touched: false,\r\n        validation: {\r\n          required: true,\r\n          minLength: 6\r\n        }\r\n      }\r\n    }\r\n  };\r\n  validateControl(value, validation) {\r\n    if (!validation) {\r\n      return true;\r\n    }\r\n    let isValid = true;\r\n    if (validation.required) {\r\n      isValid = value.trim() !== \"\" && isValid;\r\n    }\r\n    if (validation.email) {\r\n      isValid = is.email(value) && isValid;\r\n    }\r\n    if (validation.minLength) {\r\n      isValid = value.length >= validation.minLength && isValid;\r\n    }\r\n    return isValid;\r\n  }\r\n  loginHandler = async () => {\r\n    const authData = {\r\n      email: this.state.formControls.email.value,\r\n      password: this.state.formControls.password.value,\r\n      returnSecureToken: true\r\n    };\r\n    try {\r\n      const response = await axios.post(\r\n        \"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=[AIzaSyDUvvtNdqyuHSRvbeNHLhrYCnj8EutGd-8]\",\r\n        authData\r\n      );\r\n      console.log(response.data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  registerHandler = async () => {\r\n    const authData = {\r\n      email: this.state.formControls.email.value,\r\n      password: this.state.formControls.password.value,\r\n      returnSecureToken: true\r\n    };\r\n    try {\r\n      const response = await axios.post(\r\n        \"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=[AIzaSyDUvvtNdqyuHSRvbeNHLhrYCnj8EutGd-8]\",\r\n\r\n        authData\r\n      );\r\n      console.log(response.data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  onChangeHandler = (event, controlName) => {\r\n    const formControls = { ...this.state.formControls };\r\n    const control = { ...formControls[controlName] };\r\n    console.log(formControls);\r\n    console.log(control);\r\n\r\n    control.value = event.target.value;\r\n    control.touched = true;\r\n    control.valid = this.validateControl(control.value, control.validation);\r\n    formControls[controlName] = control;\r\n    let isFormValid = true;\r\n    Object.keys(formControls).forEach(name => {\r\n      isFormValid = formControls[name].valid && isFormValid;\r\n    });\r\n    this.setState({ formControls, isFormValid });\r\n  };\r\n  submitHandler = event => event.preventDefault();\r\n  renderInputs() {\r\n    return Object.keys(this.state.formControls).map((controlName, index) => {\r\n      const control = this.state.formControls[controlName];\r\n      return (\r\n        <Input\r\n          key={controlName + index}\r\n          type={control.type}\r\n          value={control.value}\r\n          valid={control.valid}\r\n          touched={control.touched}\r\n          label={control.label}\r\n          shouldValidate={!!control.validation}\r\n          errorMessage={control.errorMessage}\r\n          onChange={event => this.onChangeHandler(event, controlName)}\r\n        />\r\n      );\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <div className={classes.Auth}>\r\n        <div>\r\n          <h1>Авторизация</h1>\r\n          <form\r\n            action=\"\"\r\n            onSubmit={this.submitHandler}\r\n            className={classes.AuthForm}\r\n          >\r\n            {this.renderInputs()}\r\n            <Button\r\n              type=\"success\"\r\n              onClick={this.loginHandler}\r\n              disabled={!this.state.isFormValid}\r\n            >\r\n              Войти\r\n            </Button>\r\n            <Button\r\n              type=\"primary\"\r\n              onClick={this.registerHandler}\r\n              disabled={!this.state.isFormValid}\r\n            >\r\n              Зарегистрироваться\r\n            </Button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport classes from \"./Select.module.css\";\r\n\r\nconst Select = props => {\r\n  const htmlFor = `${props.label}-${Math.random()}`;\r\n\r\n  return (\r\n    <div className={classes.Select}>\r\n      <label htmlFor={htmlFor}>{props.label}</label>\r\n      <select id={htmlFor} value={props.value} onChange={props.onChange}>\r\n        {props.options.map((option, index) => {\r\n          return (\r\n            <option value={option.value} key={option.value + index}>\r\n              {option.text}\r\n            </option>\r\n          );\r\n        })}\r\n      </select>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Select;\r\n","export function createControl(config, validation) {\r\n  return {\r\n    ...config,\r\n    validation,\r\n    valid: !validation,\r\n    touched: false,\r\n    value: \"\"\r\n  };\r\n}\r\n\r\nexport function validate(value, validation = null) {\r\n  if (!validation) {\r\n    return true;\r\n  }\r\n\r\n  let isValid = true;\r\n\r\n  if (validation.required) {\r\n    isValid = value.trim() !== \"\" && isValid;\r\n  }\r\n\r\n  return isValid;\r\n}\r\n\r\nexport function validateForm(formControls) {\r\n  let isFormValid = true;\r\n\r\n  for (let control in formControls) {\r\n    if (formControls.hasOwnProperty(control)) {\r\n      isFormValid = formControls[control].valid && isFormValid;\r\n    }\r\n  }\r\n\r\n  return isFormValid;\r\n}\r\n","import React, { Component } from \"react\";\r\nimport classes from \"./QuizCreator.module.css\";\r\nimport Button from \"../../components/UI/Button/Button\";\r\nimport Input from \"../../components/UI/Input/Input\";\r\nimport Select from \"../../components/UI/Select/Select\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  createQuizQuestion,\r\n  finishCreateQuiz\r\n} from \"../../store/actions/create\";\r\n\r\nimport {\r\n  createControl,\r\n  validate,\r\n  validateForm\r\n} from \"../../form/formFramework\";\r\n\r\nfunction createOptionControl(number) {\r\n  return createControl(\r\n    {\r\n      label: `Вариант ${number}`,\r\n      errorMessage: \"Значение не может быть пустым\",\r\n      id: number\r\n    },\r\n    { required: true }\r\n  );\r\n}\r\n\r\nfunction createFormControls() {\r\n  return {\r\n    question: createControl(\r\n      {\r\n        label: \"Введите вопрос\",\r\n        errorMessage: \"Вопрос не может быть пустым\"\r\n      },\r\n      { required: true }\r\n    ),\r\n    option1: createOptionControl(1),\r\n    option2: createOptionControl(2),\r\n    option3: createOptionControl(3),\r\n    option4: createOptionControl(4)\r\n  };\r\n}\r\n\r\nclass QuizCreator extends Component {\r\n  state = {\r\n    isFormValid: false,\r\n    rightAnswerId: 1,\r\n    formControls: createFormControls()\r\n  };\r\n\r\n  submitHandler = event => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  addQuestionHandler = event => {\r\n    event.preventDefault();\r\n\r\n    const {\r\n      question,\r\n      option1,\r\n      option2,\r\n      option3,\r\n      option4\r\n    } = this.state.formControls;\r\n    const questionItem = {\r\n      question: question.value,\r\n      id: this.props.quiz.length + 1,\r\n      rightAnswerId: this.state.rightAnswerId,\r\n      answers: [\r\n        {\r\n          text: option1.value,\r\n          id: option1.id\r\n        },\r\n        {\r\n          text: option2.value,\r\n          id: option2.id\r\n        },\r\n        {\r\n          text: option3.value,\r\n          id: option3.id\r\n        },\r\n        {\r\n          text: option4.value,\r\n          id: option4.id\r\n        }\r\n      ]\r\n    };\r\n    this.props.createQuizQuestion(questionItem);\r\n    this.setState({\r\n      isFormValid: false,\r\n      rightAnswerId: 1,\r\n      formControls: createFormControls()\r\n    });\r\n  };\r\n\r\n  createQuizHandler = event => {\r\n    event.preventDefault();\r\n\r\n    this.setState({\r\n      isFormValid: false,\r\n      rightAnswerId: 1,\r\n      formControls: createFormControls()\r\n    });\r\n    this.props.finishCreateQuiz();\r\n  };\r\n\r\n  changeHandler = (value, controlName) => {\r\n    const formControls = { ...this.state.formControls };\r\n    const control = { ...formControls[controlName] };\r\n\r\n    control.touched = true;\r\n    control.value = value;\r\n    control.valid = validate(control.value, control.validation);\r\n\r\n    formControls[controlName] = control;\r\n\r\n    this.setState({\r\n      formControls,\r\n      isFormValid: validateForm(formControls)\r\n    });\r\n  };\r\n\r\n  renderControls() {\r\n    return Object.keys(this.state.formControls).map((controlName, index) => {\r\n      const control = this.state.formControls[controlName];\r\n\r\n      return (\r\n        <React.Fragment key={controlName + index}>\r\n          <Input\r\n            label={control.label}\r\n            value={control.value}\r\n            valid={control.valid}\r\n            shouldValidate={!!control.validation}\r\n            touched={control.touched}\r\n            errorMessage={control.errorMessage}\r\n            onChange={event =>\r\n              this.changeHandler(event.target.value, controlName)\r\n            }\r\n          />\r\n          {index === 0 ? <hr /> : null}\r\n        </React.Fragment>\r\n      );\r\n    });\r\n  }\r\n\r\n  selectChangeHandler = event => {\r\n    this.setState({\r\n      rightAnswerId: +event.target.value\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const select = (\r\n      <Select\r\n        label=\"Выберите правильный ответ\"\r\n        value={this.state.rightAnswerId}\r\n        onChange={this.selectChangeHandler}\r\n        options={[\r\n          { text: 1, value: 1 },\r\n          { text: 2, value: 2 },\r\n          { text: 3, value: 3 },\r\n          { text: 4, value: 4 }\r\n        ]}\r\n      />\r\n    );\r\n\r\n    return (\r\n      <div className={classes.QuizCreator}>\r\n        <div>\r\n          <h1>Создание теста</h1>\r\n\r\n          <form onSubmit={this.submitHandler}>\r\n            {this.renderControls()}\r\n\r\n            {select}\r\n\r\n            <Button\r\n              type=\"primary\"\r\n              onClick={this.addQuestionHandler}\r\n              disabled={!this.state.isFormValid}\r\n            >\r\n              Добавить вопрос\r\n            </Button>\r\n\r\n            <Button\r\n              type=\"success\"\r\n              onClick={this.createQuizHandler}\r\n              disabled={this.props.quiz.length === 0}\r\n            >\r\n              Создать тест\r\n            </Button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    quiz: state.create.quiz\r\n  };\r\n}\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    createQuizQuestion: item => dispatch(createQuizQuestion(item)),\r\n    finishCreateQuiz: () => dispatch(finishCreateQuiz())\r\n  };\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(QuizCreator);\r\n","import { CREATE_QUIZ_QUESTION, RESET_QUIZ_CREATION } from \"./actionTypes\";\r\nimport axios from \"../../Axios/axios-quiz\";\r\nexport function createQuizQuestion(item) {\r\n  return {\r\n    type: CREATE_QUIZ_QUESTION,\r\n    item\r\n  };\r\n}\r\nexport function resetQuizCreation() {\r\n  return { type: RESET_QUIZ_CREATION };\r\n}\r\nexport function finishCreateQuiz() {\r\n  return async (dispatch, getState) => {\r\n    await axios.post(\"quizes.json\", getState().create.quiz);\r\n    dispatch(resetQuizCreation());\r\n  };\r\n}\r\n","import React, { Component } from \"react\";\r\nimport classes from \"./QuizList.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport Loader from \"../../components/UI/Loader/Loader\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchQuizes } from \"../../store/actions/quiz\";\r\n\r\nclass QuizList extends Component {\r\n  renderQuizes() {\r\n    return this.props.quizes.map(quiz => {\r\n      return (\r\n        <li key={quiz.id}>\r\n          <NavLink to={\"/quiz/\" + quiz.id}>{quiz.name}</NavLink>\r\n        </li>\r\n      );\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.fetchQuizes();\r\n  }\r\n  render() {\r\n    return (\r\n      <div className={classes.QuizList}>\r\n        <div>\r\n          <h1>Список тестов</h1>\r\n          {this.props.loading && this.props.quizes !== 0 ? (\r\n            <Loader />\r\n          ) : (\r\n            <ul>{this.renderQuizes()}</ul>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    quizes: state.quiz.quizes,\r\n    loading: state.quiz.loading\r\n  };\r\n}\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    fetchQuizes: () => dispatch(fetchQuizes())\r\n  };\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(QuizList);\r\n","import React from \"react\";\nimport Layout from \"./hoc/Layout/Layout\";\nimport Quiz from \"./containers/Quiz/Quiz\";\nimport Auth from \"./containers/Auth/Auth\";\nimport QuizCreator from \"./containers/QuizCreator/QuizCreator\";\nimport QuizList from \"./containers/QuizList/QuizList\";\nimport { Route, Switch } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <Layout>\n      <Switch>\n        <Route path=\"/auth\" component={Auth} />\n        <Route path=\"/quiz-creator\" component={QuizCreator} />\n        <Route path=\"/quiz/:id\" component={Quiz} />\n        <Route path=\"/\" component={QuizList} />\n      </Switch>\n    </Layout>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {\r\n  FETCH_QUIZ_SUCCESS,\r\n  FETCH_QUIZES_ERROR,\r\n  FETCH_QUIZES_START,\r\n  FETCH_QUIZES_SUCCESS,\r\n  QUIZ_SET_STATE,\r\n  FINISH_QUIZ,\r\n  QUIZ_NEXT_QUESTION,\r\n  QUIZ_RETRY\r\n} from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n  quizes: [],\r\n  loading: false,\r\n  error: null,\r\n  results: {},\r\n  isFinished: false,\r\n  activeQuestion: 0,\r\n  answerState: null,\r\n  quiz: null\r\n};\r\n\r\nexport default function quizReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case FETCH_QUIZES_START:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n    case FETCH_QUIZES_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        quizes: action.quizes\r\n      };\r\n    case FETCH_QUIZES_ERROR:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.error\r\n      };\r\n    case FETCH_QUIZ_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        quiz: action.quiz\r\n      };\r\n    case QUIZ_SET_STATE:\r\n      return {\r\n        ...state,\r\n        answerState: action.answerState,\r\n        results: action.results\r\n      };\r\n    case FINISH_QUIZ:\r\n      return {\r\n        ...state,\r\n        isFinished: true\r\n      };\r\n    case QUIZ_NEXT_QUESTION:\r\n      return {\r\n        ...state,\r\n        answerState: null,\r\n        activeQuestion: action.number\r\n      };\r\n    case QUIZ_RETRY:\r\n      return {\r\n        ...state,\r\n        activeQuestion: 0,\r\n        answerState: null,\r\n        isFinished: false,\r\n        results: {}\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  CREATE_QUIZ_QUESTION,\r\n  RESET_QUIZ_CREATION\r\n} from \"../actions/actionTypes\";\r\nconst initialState = {\r\n  quiz: []\r\n};\r\nexport default function createReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case CREATE_QUIZ_QUESTION:\r\n      return {\r\n        ...state,\r\n        quiz: [...state.quiz, action.item]\r\n      };\r\n    case RESET_QUIZ_CREATION:\r\n      return {\r\n        ...state,\r\n        quiz: []\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport quizReducer from \"./quiz\";\r\nimport createReducer from \"./create\";\r\nexport default combineReducers({\r\n  quiz: quizReducer,\r\n  create: createReducer\r\n});\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { createStore, compose, applyMiddleware } from \"redux\";\nimport { Provide, Provider } from \"react-redux\";\nimport rootReducer from \"./store/reducers/rootReducer\";\nimport thunk from \"redux-thunk\";\nconst composeEnhancers =\n  typeof window === \"object\" && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({})\n    : compose;\n\nconst store = createStore(\n  rootReducer,\n  composeEnhancers(applyMiddleware(thunk))\n);\nconst app = (\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>\n);\nReactDOM.render(app, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}